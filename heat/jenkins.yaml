heat_template_version: 2013-05-23

description: Deploy jenkins master and slave(s), with slaves booting from volume

parameters:
  image:
    type: string
    description: image used for servers (master and slaves)
    default: "CC7 Base - x86_64 [2015-06-12]"
  key:
    type: string
    description: ssh key to connect to the servers as root
  flavor_master:
    type: string
    description: flavor used by the jenkins master
    default: m1.small
  flavor_slave:
    type: string
    description: flavor used by the jenkins slaves
    default: m1.medium
  master_volume:
    type: string
    description: UUID of the jenkins master config volume (for persistency)
  slave_min:
    type: number
    description: min number of slaves
    default: 1
  slave_max:
    type: number
    description: max number of slaves
    default: 5

resources:

  jenkinskey:
    type: OS::Nova::KeyPair
    properties:
      name: { get_param: 'OS::stack_name' }
      save_private_key: True

  master:
    type: OS::Nova::Server
    depends_on: jenkinskey
    properties:
      name: { get_param: 'OS::stack_name' }
      key_name: { get_param: key }
      image: { get_param: image }
      flavor: { get_param: flavor_master }
      metadata: {"cern-services": "false"}
      user_data:
        str_replace:
          template: |
            #!/bin/sh
            yum install -y wget
            wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo
            rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key
            useradd jenkins -d /var/lib/jenkins
            mount /dev/vdb /var/lib/jenkins
            yum install -y jenkins java-openjdk
            mkdir -p /var/lib/jenkins/.ssh
            echo 'privkey' > /var/lib/jenkins/.ssh/id_rsa
            chmod 400 /var/lib/jenkins/.ssh/id_rsa
            echo 'pubkey' > /var/lib/jenkins/.ssh/id_rsa.pub
            mkdir -p /var/lib/jenkins/plugins
            wget -O /var/lib/jenkins/plugins/swarm.jpi http://updates.jenkins-ci.org/latest/swarm.hpi || true
            chown -R jenkins.jenkins /var/lib/jenkins
            chkconfig jenkins on
            systemctl start jenkins
            wc_notify --data-binary '{"status": "SUCCESS"}'
          params:
            wc_notify: { get_attr: [master_handle, curl_cli] }
            privkey: { get_attr: [jenkinskey, private_key] }
            pubkey: { get_attr: [jenkinskey, public_key] }

  volume_attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_param: master_volume }
      instance_uuid: { get_resource: master }
      mountpoint: /dev/vdb

  master_wait:
    type: OS::Heat::WaitCondition
    depends_on: master
    properties:
      handle: { get_resource: master_handle }
      timeout: 1000

  master_handle:
    type: OS::Heat::WaitConditionHandle

  slavesgroup:
    type: OS::Heat::AutoScalingGroup
    depends_on: [ jenkinskey, master_wait ]
    properties:
      min_size: { get_param: slave_min }
      max_size: { get_param: slave_max }
      resource: 
        type: Jenkins::Slave
        properties:
          key: { get_param: key }
          image: { get_param: image }
          flavor: { get_param: flavor_slave }
          master_name: { get_attr: [master, first_address] }
          jenkins_pubkey: { get_attr: [jenkinskey, public_key] }

  web_server_scaleup_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: { get_resource: slavesgroup }
      cooldown: 600
      scaling_adjustment: 1

  web_server_scaledown_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: { get_resource: slavesgroup }
      cooldown: 600
      scaling_adjustment: -1

outputs:
  scale_up_url:
    description: >
      This URL is the webhook to scale up the autoscaling group.  You
      can invoke the scale-up operation by doing an HTTP POST to this
      URL; no body nor extra headers are needed.
    value: {get_attr: [web_server_scaleup_policy, alarm_url]}
  scale_dn_url:
    description: >
      This URL is the webhook to scale down the autoscaling group.
      You can invoke the scale-down operation by doing an HTTP POST to
      this URL; no body nor extra headers are needed.
    value: {get_attr: [web_server_scaledown_policy, alarm_url]}
  master_host:
    value: { get_attr: [master, name] }
    description: jenkins master hostname
  master_ip:
    value: { get_attr: [master, first_address] }
    description: jenkins master IP address
